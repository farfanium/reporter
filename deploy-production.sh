#!/bin/bash

# Production Deployment Script for The Reporter
# This script deploys the application using Docker Compose

set -e

echo "üöÄ Deploying The Reporter to Production..."

# Check if Docker is installed
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker is not installed. Please install Docker first."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose is not installed. Please install Docker Compose first."
    exit 1
fi

# Check if production build exists
if [ ! -f "backend/build/libs/reporter-backend-0.0.1-SNAPSHOT.jar" ]; then
    echo "‚ö†Ô∏è  Backend build not found. Running production build..."
    ./build-production.sh
fi

# Check if NAS directory is mounted
if [ ! -d "nas/reports" ]; then
    echo "‚ö†Ô∏è  NAS directory not found. Creating example structure..."
    mkdir -p nas/reports
    echo "üìÅ Please mount your actual NAS directory to ./nas/ before continuing"
    echo "   Example: ln -s /path/to/your/nas ./nas"
    read -p "Press enter to continue with example directory, or Ctrl+C to exit..."
fi

# Load environment variables if they exist
if [ -f ".env.production" ]; then
    source .env.production
fi

# Stop existing containers
echo "üõë Stopping existing containers..."
docker-compose down --remove-orphans

# Build and start containers
echo "üèóÔ∏è  Building and starting containers..."
docker-compose up -d --build

# Wait for services to be healthy
echo "‚è≥ Waiting for services to start..."
sleep 10

# Check service health
echo "üîç Checking service health..."
for i in {1..30}; do
    if curl -f http://localhost:8080/actuator/health >/dev/null 2>&1; then
        echo "‚úÖ Backend is healthy"
        break
    fi
    if [ $i -eq 30 ]; then
        echo "‚ùå Backend health check failed"
        docker-compose logs backend
        exit 1
    fi
    echo "‚è≥ Waiting for backend to be ready... ($i/30)"
    sleep 3
done

for i in {1..30}; do
    if curl -f http://localhost:3000 >/dev/null 2>&1; then
        echo "‚úÖ Frontend is healthy"
        break
    fi
    if [ $i -eq 30 ]; then
        echo "‚ùå Frontend health check failed"
        docker-compose logs frontend
        exit 1
    fi
    echo "‚è≥ Waiting for frontend to be ready... ($i/30)"
    sleep 3
done

echo ""
echo "‚úÖ Deployment completed successfully!"
echo ""
echo "üìä Application is now running:"
echo "‚Ä¢ Frontend: http://localhost:3000"
echo "‚Ä¢ Backend API: http://localhost:8080/api"
echo "‚Ä¢ Health Check: http://localhost:8080/actuator/health"
echo ""
echo "üîß Management commands:"
echo "‚Ä¢ View logs: docker-compose logs -f"
echo "‚Ä¢ Stop services: docker-compose down"
echo "‚Ä¢ Restart services: docker-compose restart"
echo "‚Ä¢ Update deployment: docker-compose up -d --build"
echo ""
echo "üìÅ Data directories:"
echo "‚Ä¢ Configuration: ./data/config/"
echo "‚Ä¢ Logs: ./data/logs/"
echo "‚Ä¢ NAS Mount: ./nas/"
